package com.capgemini.bankapp.service.impl;

import com.capgemini.bankapp.entities.BankAccount;
import com.capgemini.bankapp.repository.BankAccountRepository;
import com.capgemini.bankapp.service.BankAccountService;

public class BankAccountServiceImpl implements BankAccountService {

	private BankAccountRepository bankAccountRepository;

	public void setBankAccountRepository(BankAccountRepository bankAccountRepository) {
		this.bankAccountRepository = bankAccountRepository;
	}

	@Override
	public double withdraw(long accountId, double amount) {
		double balance = bankAccountRepository.getBalance(accountId);
		if(balance != -1) {
			if(balance - amount >= 0) {
				bankAccountRepository.updateBalance(accountId, balance - amount);
				return bankAccountRepository.getBalance(accountId);
			}		
		}
		return balance;
	}

	

	@Override
	public double deopsit(long accountId, double amount) {
		
		double balance = bankAccountRepository.getBalance(accountId);
		if(balance!=-1) {
			bankAccountRepository.updateBalance(accountId, balance=amount);
			return bankAccountRepository.getBalance(accountId);
	}
	return balance;
}

	@Override
	public double fundTransfer(long fromAccount, long toAccount, double amount) {
		
		double balance = withdraw(fromAccount,amount);
			if(balance!=-1)
				deopsit(toAccount, amount);
		return balance;
	}

	@Override
	public double getBalance(long accountId) {
		// TODO Auto-generated method stub
		return 0;
	}

}
